"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from datetime import timedelta
from pathlib import Path
from dotenv import load_dotenv, find_dotenv
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(find_dotenv())

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ijac$^krutv$w5c@n_s%x!)w4#q8go*^721ri4&2ghu46y7ucp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3001",  "http://localhost:3000"
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'chat',

    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',

]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'HOST': 'localhost',
        'PORT': 5432,
        'NAME': 'chatapp',
        'USER': 'postgres',
        'PASSWORD': 1234,
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# JWT configurations
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),  # Token expiration time
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'ALGORITHM': 'HS256',  # The algorithm used to sign the token
    # Other configurations as needed
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}

AUTH_USER_MODEL = 'chat.User'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.office365.com'  # Your email provider's SMTP server
EMAIL_PORT = 587  # Email port (could be different based on your email provider)
EMAIL_HOST_USER = 'noreply@trove-research.com'  # Your email address
EMAIL_HOST_PASSWORD = 'Vah03641'  # Your email password
EMAIL_USE_TLS = True

EMAIL_DEFAULT_RECEIVERS=[('Stephen Sebastian', 'bharath@thinq24.com')]
# settings.py

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime}  {message}',
            'style': '{',
        }
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        }
    },
    'handlers': {
        'error': {
            'level': 'ERROR',  # Adjust the level according to your needs
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': BASE_DIR.joinpath('logs/error.log'),  # Log file path
            'maxBytes': 1024 * 1024 * 5,  # 5 MB file size limit (change as needed)
            'backupCount': 5,  # Number of backup files
            'formatter': 'verbose',
        },
        'mail': {
            'level': 'ERROR',
            'class': 'logging.handlers.SMTPHandler',
            'mailhost': ('smtp.office365.com', 587),  # Specify SMTP server and port
            'fromaddr': 'noreply@trove-research.com',
            'toaddrs': ['bharath@thinq24.com'],  # List of recipient email addresses
            'subject': 'Error Occurred!',  # Email subject
            'credentials': ('noreply@trove-research.com', 'Vah03641'),  # Your email credentials
            'secure': (),  # You can set '()' or '(None)' for unencrypted connections, or ('tls') or ('ssl') for encrypted connections
            'filters': ['require_debug_false'],
        },
    },
    'loggers': {
        'error': {  # Change logger name to 'error'
            'handlers': ['error', 'mail'],  # Add 'mail' handler
            'level': 'ERROR',  # Log errors and above
            'propagate': True,
        },
    },
}


# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'verbose': {
#             'format': '{levelname} {asctime} {module} {message}',
#             'style': '{',
#         },
#         'simple': {
#             'format': '{levelname} {message}',
#             'style': '{',
#         },
#     },
#     'handlers': {
#         'file': {
#             'level': 'ERROR',
#             'class': 'logging.FileHandler',
#             'filename': BASE_DIR.joinpath('logs/error.log'),
#             'formatter': 'verbose',
#         },
#         'email': {
#             'level': 'ERROR',
#             'class': 'logging.handlers.SMTPHandler',
#             'mailhost': ('smtp.office365.com', 587),  # Update with your SMTP server details
#             'fromaddr': 'noreply@trove-research.com',
#             'toaddrs': ['bharth@thinq24.com'],  # List of recipient email addresses
#             'subject': 'Error Occurred!',  # Email subject
#             'credentials': ('noreply@trove-research.com', 'Vah03641'),  # Update with your SMTP credentials
#             'formatter': 'verbose',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['file', 'email'],  # Add the 'email' handler to the list of handlers
#             'level': 'ERROR',
#             'propagate': True,
#         },
#     },
# }

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'mail_admins': {
#             'level': 'ERROR',
#             'class': 'django.utils.log.AdminEmailHandler',
#             'include_html': True,
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['mail_admins'],
#             'level': 'ERROR',
#             'propagate': True,
#         },
#     },
# }
